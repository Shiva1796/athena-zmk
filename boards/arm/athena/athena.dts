/dts-v1/;

#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

#include "athena-pinctrl.dtsi"

#include <layouts/common/65percent/ansi.dtsi>

/ {
    model = "athena";
    compatible = "athena";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        // zephyr,console = &cdc_acm_uart;
        zmk,battery = &vbatt;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &layout_65_ansi;
        zmk,underglow = &led_strip;
        zmk,keymap-sensors = <&sensors>;
    };

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder>;
        triggers-per-rotation = <12>;  // Match steps
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <6>;
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(5,0)       RC(2,13)
RC(1,0)   RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)             RC(3,13) 
RC(2,0)     RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)   RC(2,12)                  RC(4,13)     
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11)     RC(3,12)  RC(4,11)             RC(5,13) 
RC(4,0)   RC(4,1)   RC(4,2)       RC(4,4)     RC(4,5)      RC(4,7)  RC(4,8)     RC(4,10)           RC(5,10)  RC(5,11)  RC(5,12) 
>;                    
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        wakeup-source;

        diode-direction = "col2row";
        row-gpios
            = <&gpio0 30 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio1 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        col-gpios =
            <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio0 17 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 7  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio0 22 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 3  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio1 1  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>,
            <&gpio0 5  (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    };

    leds {
        compatible = "gpio-leds";
        user_led: led_0 {
            gpios = <&gpio0 26 GPIO_ACTIVE_HIGH>;
            label = "User LED";
        };
    };

    aliases {
        indicator-led = &user_led;
    };

    encoder: encoder {
        compatible = "alps,ec11";
        a-gpios = <&gpio0 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <12>;  // Common working value
        status = "okay";
    };

    EXT_POWER {
        compatible = "zmk,ext-power-generic";
        control-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        io-channels = <&adc 2>;
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 806000)>;
    };

    // LED Control Macros
    macros {
        led_toggle: led_toggle_macro {
            label = "LED_TOGGLE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_TOG>;
        };
        
        led_bright_down: led_bright_down_macro {
            label = "LED_BRIGHT_DOWN";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&rgb_ug RGB_BRD
                &rgb_ug RGB_BRD
                &rgb_ug RGB_BRD
                &rgb_ug RGB_BRD>;
        };
        
        led_bright_up: led_bright_up_macro {
            label = "LED_BRIGHT_UP";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&rgb_ug RGB_BRI
                &rgb_ug RGB_BRI
                &rgb_ug RGB_BRI
                &rgb_ug RGB_BRI>;
        };

        led_cycle_effect: led_cycle_effect_macro {
            label = "LED_CYCLE_EFFECT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>;
        };

        led_hue_cycle: led_hue_cycle_macro {
            label = "LED_HUE_CYCLE";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = 
                <&rgb_ug RGB_HUI
                &rgb_ug RGB_HUI
                &rgb_ug RGB_HUI>;
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */
        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */
        chain-length = <75>; /* number of LEDs */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
    };
};

zephyr_udc0: &usbd {
    status = "okay";
    // cdc_acm_uart: cdc_acm_uart {
    //     compatible = "zephyr,cdc-acm-uart";
    // };
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00001000>;
        };

        code_partition: partition@1000 {
            reg = <0x00001000 0x000d3000>;
        };

        /*
         * The flash starting at 0x000d4000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@d4000 {
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

&layout_65_ansi {
    transform = <&default_transform>;
};